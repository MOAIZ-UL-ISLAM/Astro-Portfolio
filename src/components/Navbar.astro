---
import { Icon } from "astro-icon/components";
const currentPath = Astro.url.pathname;
---

<nav
  class="flex items-center justify-between py-4 px-4 border-b-2 border-gray-200"
>
  <div class="flex items-center">
    <a href="/" class="flex items-center text-2xl font-bold text-gray-900">
      <Icon name="mdi:terminal" class="h-8 w-8 mr-4 cursor-pointer" />
    </a>
    <!-- Mobile menu button -->
    <button id="menuButton" class="md:hidden cursor-pointer">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        ><path
          fill="currentColor"
          d="M4 18q-.425 0-.712-.288T3 17t.288-.712T4 16h16q.425 0 .713.288T21 17t-.288.713T20 18zm0-5q-.425 0-.712-.288T3 12t.288-.712T4 11h16q.425 0 .713.288T21 12t-.288.713T20 13zm0-5q-.425 0-.712-.288T3 7t.288-.712T4 6h16q.425 0 .713.288T21 7t-.288.713T20 8z"
        ></path></svg
      >
    </button>
    <!-- Desktop navigation -->
    <div class="hidden md:flex space-x-8">
      <a
        href="/"
        class={`hover:text-gray-700 ${currentPath === "/" ? "text-blue-500 border-b-2 border-blue-500" : ""}`}
        >Start</a
      >
      <a
        href="/about"
        class={`hover:text-gray-700 ${currentPath === "/about" ? "text-blue-500 border-b-2 border-blue-500" : ""}`}
        >About</a
      >
      <a
        href="/projects"
        class={`hover:text-gray-700 ${currentPath === "/projects" ? "text-blue-500 border-b-2 border-blue-500" : ""}`}
        >Projects</a
      >
      <a
        href="/contact"
        class={`hover:text-gray-700 ${currentPath === "/contact" ? "text-blue-500 border-b-2 border-blue-500" : ""}`}
        >Contact Me</a
      >
    </div>
  </div>
  <div class="flex items-center space-x-4">
    <button class="hover:text-gray-700 flex gap-2">
      <Icon name="mdi:search" class="h-6 w-6 cursor-pointer" /> 
    </button>
    
    <button id="themeToggle" class="hover:text-gray-700">
      <Icon name="mdi:white-balance-sunny" class="sun h-6 w-6 cursor-pointer" />
      <Icon name="mdi:moon-waning-crescent" class="moon h-6 w-6 cursor-pointer hidden" />
    </button>
    <a href='https://www.dropbox.com/scl/fi/u9os45qz1xrb670kue8vy/MOAIZ-CV.pdf?rlkey=04rg0z3fmq11og4lql39pd8mu&st=z68wk4gt&dl=0' download title="Download CV" class='flex' target="_blank">
      <Icon name='mdi:file-download' class="h-6 w-6 cursor-pointer" />
      <span class='text-[7px]'>
        Download CV
      </span>
    </a>

  </div>
</nav>

<!-- Mobile menu (hidden by default) -->

<div id="mobileMenu" class="hidden md:hidden p-4 border-b-2 border-gray-700">
  <div class="flex flex-col items-start justify-center font-light space-y-4">
    <a
      href="/"
      class={`hover:text-gray-700 ${currentPath === "/" ? "text-blue-500 border-b-2 border-blue-500" : ""}`}
      >Start</a
    >
    <a
      href="/about"
      class={`hover:text-gray-700 ${currentPath === "/about" ? "text-blue-500 border-b-2 border-blue-500" : ""}`}
      >About</a
    >
    <a
      href="/projects"
      class={`hover:text-gray-700 ${currentPath === "/projects" ? "text-blue-500 border-b-2 border-blue-500" : ""}`}
      >Projects</a
    >
    <a
      href="/contact"
      class={`hover:text-gray-700 ${currentPath === "/contact" ? "text-blue-500 border-b-2 border-blue-500" : ""}`}
      >Contact Me</a
    >
  </div>
</div>
<script>
  // Mobile menu toggle
  const menuButton = document.getElementById("menuButton");
  const mobileMenu = document.getElementById("mobileMenu");

  if (menuButton && mobileMenu) {
    menuButton.addEventListener("click", () => {
      mobileMenu.classList.toggle("hidden");
    });
  }
  // Theme toggle script
  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme") || "dark";
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  // Apply initial theme
  if (theme === "dark") {
    document.documentElement.classList.add("dark");
    document.body.classList.add("bg-[#0B0F1A]", "text-white");
  } else {
    document.documentElement.classList.remove("dark");
    document.body.classList.remove("bg-[#0B0F1A]", "text-white");
  }

  localStorage.setItem("theme", theme);

  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle("dark");
    
    // Add transition class before changing background
    document.body.style.transition = "background-color 0.3s ease, color 0.3s ease";
    document.body.classList.toggle("bg-[#0B0F1A]");
    document.body.classList.toggle("text-white");

    const isDark = element.classList.contains("dark");
    localStorage.setItem("theme", isDark ? "dark" : "light");

    // Update icons with animation
    const sunIcon = document.querySelector('.moon');
    const moonIcon = document.querySelector('.sun');

    if (sunIcon && moonIcon) {
      sunIcon.style.transition = "transform 0.5s ease, opacity 0.7s ease";
      moonIcon.style.transition = "transform 0.5s ease, opacity 0.7s ease";
      
      sunIcon.classList.toggle('hidden');
      moonIcon.classList.toggle('hidden');
      
      // Add rotation animation to icons
      if (!sunIcon.classList.contains('hidden')) {
        sunIcon.style.transform = 'rotate(360deg)';
      }
      if (!moonIcon.classList.contains('hidden')) {
        moonIcon.style.transform = 'rotate(360deg)';
      }
    }
  };

  const themeToggle = document.getElementById("themeToggle");
  if (themeToggle) {
    themeToggle.addEventListener("click", handleToggleClick);
  }
</script>

<style>
  /* Add smooth transition for theme changes */
  :root {
    transition: all 0.3s ease;
  }
</style>
